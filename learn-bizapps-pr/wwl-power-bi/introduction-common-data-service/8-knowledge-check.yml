### YamlMime:ModuleUnit
uid: learn-bizapps.wwl.introduction-common-data-service.knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: "Knowledge check"
  ms.date: 03/25/2021
  author: wwlpublish
  ms.author: chsims
  ms.topic: interactive-tutorial
  ms.prod: learning-power-apps
azureSandbox: false
durationInMinutes: 3
content: |
  [!include[](includes/8-knowledge-check.md)]
quiz:
  title: "Check your knowledge"
  questions:
  - content: "How can business rules be used in both canvas and model-driven apps?"
    choices:
    - content: "To validate data and show error messages."
      isCorrect: true
      explanation: "Correct. Microsoft Dataverse allows business rules to be set to apply and maintain business logic at the data layer."
    - content: "Show or hide fields."
      isCorrect: false
      explanation: "Incorrect. Only model-driven apps can use this functionality."
    - content: "Manage solution development and data storage."
      isCorrect: false
      explanation: "Incorrect. Environments are the way you manage solution development and data storage in Dataverse."
  - content: "Your manager has built a solution using the Microsoft Dataverse using a few of the standard tables included out of the box. He wants to capture the date that new records are added to the Entity, but he isn't sure how. He notices that a \"Date\" field is already inside his Entity, but he wants the field to have a custom name of \"Date Confirmed\". What would you recommend he do?"
    choices:
    - content: "Create a new table with the name \"Date Confirmed\"."
      isCorrect: false
      explanation: "Incorrect. Tables can have many columns. You wouldn't want to create a new table just to store a date when a column inside the existing table already does that."
    - content: "Use the built-in Date column within the table to store the date values, but rename the column to \"Date Confirmed\"."
      isCorrect: true
      explanation: "Correct. When building a solution in Dataverse, it is best practice to use the out-of-the-box tables and columns where possible. In this case, the table already has a \"Date\" column. Best practices also state that you simply rename the existing columns if needed, so that would be the recommended solution here."
    - content: "Create a new Environment with the name \"Date Confirmed\"."
      isCorrect: false
      explanation: "Incorrect. Environments are spaces in which Dataverse instances live, but creating a new Environment will do anything to help in this situation because creating a new Environment will leave him with the same out-of-the-box entities that he started with in his old Environment."
  - content: "One of your co-workers has set up a Model-driven application using Dataverse. The app captures information about computer hardware assets, including their price. Your co-worker is concerned that users of the application are going to forget to populate the cost center if the part is expendable. How could this be prevented?"
    choices:
    - content: "Use Power Automate to validate that the cost center column value is populated."
      isCorrect: false
      explanation: "Incorrect. You don't need a Flow to solve this issue, because the Dataverse has built-in capabilities to handle this sort of data validation without introducing any additional workflow solutions."
    - content: "Use a Business Rule to make the cost center field required if the expendable field is true."
      isCorrect: true
      explanation: "Correct. A business rule could be set up to mark the cost center field as required when the expendable field is set to true."
    - content: "Use a Canvas App instead of a Model-driven app."
      isCorrect: false
      explanation: "Incorrect. There are ways to ensure the proper fields are populated in a Model-driven app."